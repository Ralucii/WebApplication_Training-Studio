// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication_Training_Studio.Data;

#nullable disable

namespace WebApplication_Training_Studio.Migrations
{
    [DbContext(typeof(WebApplication_Training_StudioContext))]
    [Migration("20230108132843_MemberSubscription")]
    partial class MemberSubscription
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.FitnessClass", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int?>("TrainerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LocationID");

                    b.HasIndex("TrainerID");

                    b.ToTable("FitnessClass");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.FitnessClassCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("FitnessClassID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("FitnessClassID");

                    b.ToTable("FitnessClassCategory");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Location", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Subscription", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("FitnessClassID")
                        .HasColumnType("int");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FitnessClassID");

                    b.HasIndex("MemberID");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Trainer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Trainer");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.FitnessClass", b =>
                {
                    b.HasOne("WebApplication_Training_Studio.Models.Location", "Location")
                        .WithMany("FitnessClass")
                        .HasForeignKey("LocationID");

                    b.HasOne("WebApplication_Training_Studio.Models.Trainer", "Trainer")
                        .WithMany("FitnessClasses")
                        .HasForeignKey("TrainerID");

                    b.Navigation("Location");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.FitnessClassCategory", b =>
                {
                    b.HasOne("WebApplication_Training_Studio.Models.Category", "Category")
                        .WithMany("FitnessClassCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication_Training_Studio.Models.FitnessClass", "FitnessClass")
                        .WithMany("FitnessClassCategories")
                        .HasForeignKey("FitnessClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("FitnessClass");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Subscription", b =>
                {
                    b.HasOne("WebApplication_Training_Studio.Models.FitnessClass", "FitnessClass")
                        .WithMany()
                        .HasForeignKey("FitnessClassID");

                    b.HasOne("WebApplication_Training_Studio.Models.Member", "Member")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MemberID");

                    b.Navigation("FitnessClass");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Category", b =>
                {
                    b.Navigation("FitnessClassCategories");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.FitnessClass", b =>
                {
                    b.Navigation("FitnessClassCategories");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Location", b =>
                {
                    b.Navigation("FitnessClass");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Member", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("WebApplication_Training_Studio.Models.Trainer", b =>
                {
                    b.Navigation("FitnessClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
